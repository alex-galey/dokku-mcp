name: Dokku Compatibility Tests

on:
  push:
    branches: [main]
  repository_dispatch:
    types: [dokku-release]
  workflow_dispatch: # Allow manual execution
    inputs:
      dokku_version:
        description: 'Specific Dokku version to test (leave empty for full matrix)'
        required: false
        type: string
      test_type:
        description: 'Test type'
        required: false
        default: 'full-matrix'
        type: choice
        options:
          - 'full-matrix'
          - 'single-version'

jobs:
  setup-matrix:
    name: Setup Test Matrix
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set matrix versions
      id: set-matrix
      run: |
        if [ "${{ github.event_name }}" = "repository_dispatch" ] && [ -n "${{ github.event.client_payload.dokku_version }}" ]; then
          # Single version for new release
          echo "matrix=[\"${{ github.event.client_payload.dokku_version }}\"]" >> $GITHUB_OUTPUT
          echo "Using single version from release dispatch: ${{ github.event.client_payload.dokku_version }}"
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ inputs.test_type }}" = "single-version" ] && [ -n "${{ inputs.dokku_version }}" ]; then
          # Single version for manual execution
          echo "matrix=[\"${{ inputs.dokku_version }}\"]" >> $GITHUB_OUTPUT
          echo "Using single version from manual input: ${{ inputs.dokku_version }}"
        else
          # Full matrix from file
          echo "Found .tested-dokku-versions file with content:"
          cat .tested-dokku-versions
          echo "---"
          
          # Read versions from file, clean and sort (filter out empty lines and comments)
          VERSIONS=$(cat .tested-dokku-versions | grep -v '^$' | grep -v '^#' | sort -V | jq -R -s -c 'split("\n") | map(select(length > 0))')
          
          # Always ensure master is included (for bleeding edge testing)
          VERSIONS_WITH_MASTER=$(echo "$VERSIONS" | jq -c '. + ["master"] | unique')
          
          # Sort the final array with master at the end
          FINAL_MATRIX=$(echo "$VERSIONS_WITH_MASTER" | jq -c 'sort | if index("master") then (. - ["master"]) + ["master"] else . end')
          
          echo "matrix=$FINAL_MATRIX" >> $GITHUB_OUTPUT
          echo "Using full matrix from .tested-dokku-versions file:"
          echo "$FINAL_MATRIX" | jq -r '.[]' | sed 's/^/  - /'
        fi

  dokku-compatibility:
    name: Dokku Compatibility Tests
    runs-on: ubuntu-22.04
    needs: setup-matrix
    strategy:
      matrix:
        dokku-version: ${{ fromJSON(needs.setup-matrix.outputs.matrix) }}
    
    steps:
    - name: Show test context
      run: |
        echo "Testing Dokku version: ${{ matrix.dokku-version }}"
        case "${{ github.event_name }}" in
          "push")
            echo "Triggered by: Push to main branch"
            echo "Test type: Full version matrix"
            echo "Commit: ${{ github.sha }}"
            ;;
          "repository_dispatch")
            echo "Triggered by: New Dokku release detection"
            echo "Test type: Single version"
            echo "Release version: ${{ github.event.client_payload.dokku_version }}"
            ;;
          "workflow_dispatch")
            echo "Triggered by: Manual execution"
            if [ "${{ inputs.test_type }}" = "single-version" ] && [ -n "${{ inputs.dokku_version }}" ]; then
              echo "Test type: Single version"
              echo "Specified version: ${{ inputs.dokku_version }}"
            else
              echo "Test type: Full version matrix"
            fi
            ;;
        esac
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'
        cache: true
    
    - name: Install Dokku ${{ matrix.dokku-version }}
      run: |
        if [ "${{ matrix.dokku-version }}" = "master" ]; then
          wget -O- https://raw.githubusercontent.com/dokku/dokku/master/bootstrap.sh | sudo bash
        else
          wget -O- https://raw.githubusercontent.com/dokku/dokku/${{ matrix.dokku-version }}/bootstrap.sh | sudo bash
        fi
        sudo dokku plugin:install-dependencies --core
        sudo dokku events:on || true
        sudo usermod -aG dokku $USER
    
    - name: Install development tools
      run: make install-tools
    
    - name: Integration tests
      run: make test-integration-ci
      continue-on-error: ${{ matrix.dokku-version == 'master' }}
    
    - name: Cleanup
      if: always()
      run: make dokku-clean

  # load-tests:
  #   name: Load Tests
  #   runs-on: ubuntu-22.04
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
    
  #   - name: Setup Go
  #     uses: actions/setup-go@v6
  #     with:
  #       go-version: '1.24'
  #       cache: true
    
  #   - name: Install Dokku
  #     run: |
  #       wget -O- https://raw.githubusercontent.com/dokku/dokku/v0.34.0/bootstrap.sh | sudo bash
  #       sudo dokku plugin:install-dependencies --core
  #       sudo dokku events:on || true
  #       sudo usermod -aG dokku $USER
    
  #   - name: Load tests
  #     run: |
  #       export MAX_TEST_APPS=20
  #       export CONCURRENT_TESTS=5
  #       make test-ci-performance
    
  #   - name: Performance profiling
  #     run: make profile
    
  #   - name: Upload profiles
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: performance-profiles-${{ github.run_number }}
  #       path: |
  #         *.prof
  #         *.html
    
  #   - name: Cleanup
  #     if: always()
  #     run: make cleanup-ci

  notify:
    name: Notification Results
    runs-on: ubuntu-22.04
    needs: [setup-matrix, dokku-compatibility]
    if: always() && !cancelled()
    permissions:
      issues: write
      contents: read
    
    steps:
    - name: Prepare summary
      run: |
        case "${{ github.event_name }}" in
          "push")
            echo "## Dokku Compatibility Test Results - Commit ${{ github.sha }} - $(date)" > summary.md
            echo "" >> summary.md
            echo "**Triggered by**: Push to main branch" >> summary.md
            echo "**Commit**: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})" >> summary.md
            echo "**Test type**: Full version matrix" >> summary.md
            ;;
          "repository_dispatch")
            echo "## Dokku Compatibility Test Results for ${{ github.event.client_payload.dokku_version }} - $(date)" > summary.md
            echo "" >> summary.md
            echo "**Triggered by**: New Dokku release detection" >> summary.md
            echo "**Dokku version**: ${{ github.event.client_payload.dokku_version }}" >> summary.md
            echo "**Test type**: Single version" >> summary.md
            ;;
          *)
            echo "## Dokku Compatibility Test Results - $(date)" > summary.md
            echo "" >> summary.md
            echo "**Triggered by**: Manual execution" >> summary.md
            if [ "${{ inputs.test_type }}" = "single-version" ]; then
              echo "**Test type**: Single version (${{ inputs.dokku_version }})" >> summary.md
            else
              echo "**Test type**: Full version matrix" >> summary.md
            fi
            ;;
        esac
        echo "" >> summary.md
        if [ "${{ needs.dokku-compatibility.result }}" = "failure" ]; then
          echo "- ðŸ”§ Check compatibility with new Dokku versions" >> summary.md
        fi
    
    - name: Create issue if tests fail
      if: needs.dokku-compatibility.result == 'failure'
      uses: actions/github-script@v8
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('summary.md', 'utf8');
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Dokku Compatibility Tests Failed - ${new Date().toISOString().split('T')[0]}`,
            body: summary,
            labels: ['bug', 'ci', 'maintenance']
          }); 