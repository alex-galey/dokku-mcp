# Dokku MCP Server Configuration Example
# Copy this file to config.yaml and modify as needed

# Transport configuration (choose stdio or sse)
transport:
  type: "stdio"      # "stdio" or "sse"
  host: "localhost"  # Only used for sse/HTTP
  port: 8080         # Only used for sse/HTTP

log_level: "info"        # debug, info, warn, error
log_format: "json"       # json, text
timeout: "30s"

# Dokku configuration
dokku_path: "/usr/bin/dokku"

# SSH configuration for Dokku connection
ssh:
  host: "localhost"
  port: 3022
  user: "dokku"
  key_path: ""    # Optional - leave empty for automatic authentication fallback

# SSH Authentication Priority (automatic fallback):
# 1. ssh-agent (if available and has keys loaded)
# 2. ~/.ssh/id_rsa (if file exists and is readable)  
# 3. ssh.key_path (if configured and accessible)
# 4. ssh-agent as last resort

# Plugin Discovery Configuration
plugin_discovery:
  enabled: true               # Enable/disable plugin discovery
  sync_interval: "5m"         # How often to check for plugin changes
                             # Use "0" or false to disable periodic sync
                             # Examples: "30s", "5m", "1h"

# Caching configuration
cache_enabled: true
cache_ttl: "5m"

security:
  # List of command patterns that are forbidden (substring matching)
  # Commands containing these patterns will be blocked
  blacklist:
    - "destroy"          # Blocks: apps:destroy, postgres:destroy, redis:destroy, etc.
    - "unset"            # Blocks: config:unset
    - "remove"           # Blocks: domains:remove, ssh-keys:remove, etc.
    - "uninstall"        # Blocks: plugin:uninstall
    
    # You can also be more specific:
    # - "apps:destroy"   # Only blocks exact apps:destroy command
    # - "postgres:"      # Blocks all postgres commands
    # - ":destroy"       # Blocks any service destroy command

# Example configurations for different scenarios:

# Example 1: Local Dokku instance
# ssh:
#   host: "localhost"
#   port: 22
#   user: "dokku"
#   key_path: ""

# Example 2: Remote Dokku with custom SSH key
# ssh:
#   host: "dokku.mydomain.com"
#   port: 22
#   user: "dokku"
#   key_path: "/home/user/.ssh/dokku_rsa"

# Example 3: Remote Dokku with custom port
# ssh:
#   host: "dokku.mydomain.com"
#   port: 2222
#   user: "dokku"
#   key_path: ""

# Example 4: Development environment with longer timeouts
# ssh:
#   host: "dev-dokku.local"
#   port: 22
#   user: "dokku"
#   key_path: ""
# timeout: "60s" 